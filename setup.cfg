[metadata]
name = oschecks
summary = OpenStack monitoring tools
description-file =
    README.md
author = Lars Kellogg-Stedman
author-email = lars@redhat.com
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7

[global]
setup-hooks =
    pbr.hooks.setup_hook

[files]
packages =
    oschecks

[entry_points]
oschecks.check =
    keystone api = oschecks.check.check_keystone:CheckAPI
    keystone service exists = oschecks.check.check_keystone:CheckServiceExists
    keystone service alive = oschecks.check.check_keystone:CheckServiceAlive
    nova api = oschecks.check.check_nova:CheckAPI
    nova flavor exists = oschecks.check.check_nova:CheckFlavorExists
    nova server exists = oschecks.check.check_nova:CheckServerExists
    cinder api = oschecks.check.check_cinder:CheckAPI
    cinder volume exists = oschecks.check.check_cinder:CheckVolumeExists
    cinder volume create-delete = oschecks.check.check_cinder:CheckVolumeCreateDelete
    glance api = oschecks.check.check_glance:CheckAPI
    glance image exists = oschecks.check.check_glance:CheckImageExists
    swift api = oschecks.check.check_swift:CheckAPI
    swift container exists = oschecks.check.check_swift:CheckContainerExists
    swift object exists = oschecks.check.check_swift:CheckObjectExists
    gnocchi api = oschecks.check.check_gnocchi:CheckAPI
    gnocchi resource-type exists = oschecks.check.check_gnocchi:CheckResourceTypeExists
    ceph status = oschecks.check.check_ceph:CheckStatus
    ceph df = oschecks.check.check_ceph:CheckDf

console_scripts =
    oschecks = oschecks.main:cli

[wheel]
universal = 1

[pbr]
# Treat sphinx warnings as errors during the docs build; this helps us keep
# the documentation clean.
warnerrors = true

[flake8]
ignore = E731
